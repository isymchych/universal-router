{"version":3,"file":"universal-router-generate-urls.min.js","sources":["src/generateUrls.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright Â© 2015-present Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* eslint no-param-reassign: ['error', { props: false }] */\n\nimport UniversalRouter from './UniversalRouter';\n\nconst { pathToRegexp } = UniversalRouter;\nconst cache = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  if (routesByName.has(route.name)) {\n    throw new Error(`Route \"${route.name}\" already exists`);\n  }\n\n  if (route.name) {\n    routesByName.set(route.name, route);\n  }\n\n  if (routes) {\n    for (let i = 0; i < routes.length; i += 1) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.children);\n    }\n  }\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof UniversalRouter)) {\n    throw new TypeError('An instance of UniversalRouter is expected');\n  }\n\n  router.routesByName = router.routesByName || new Map();\n\n  return (routeName, params) => {\n    let route = router.routesByName.get(routeName);\n    if (!route) {\n      router.routesByName.clear(); // clear cache\n      cacheRoutes(router.routesByName, router.root, router.root.children);\n\n      route = router.routesByName.get(routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = '';\n      let rt = route;\n      while (rt) {\n        const path = Array.isArray(rt.path) ? rt.path[0] : rt.path;\n        if (path) {\n          fullPath = path + fullPath;\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp.parse(fullPath);\n      const toPath = pathToRegexp.tokensToFunction(tokens);\n      const keys = Object.create(null);\n      for (let i = 0; i < tokens.length; i += 1) {\n        if (typeof tokens[i] !== 'string') {\n          keys[tokens[i].name] = true;\n        }\n      }\n      regexp = { toPath, keys };\n      cache.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = router.baseUrl + regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i += 1) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n\nUniversalRouter.generateUrls = generateUrls;\n\nexport default generateUrls;\n"],"names":["pathToRegexp","cache","Map","generateUrls","router","options","UniversalRouter","TypeError","routesByName","routeName","params","route","get","clear","cacheRoutes","routes","has","name","Error","set","i","length","childRoute","parent","children","root","regexp","fullPath","rt","path","Array","isArray","tokens","parse","toPath","tokensToFunction","keys","Object","create","url","baseUrl","stringifyQueryParams","queryParams","key","query","charAt"],"mappings":";4QAWA,IAEQA,iDAAAA,aACFC,EAAQ,IAAIC,IAoBlB,SAASC,EAAaC,OAAQC,iEACtBD,aAAkBE,SAChB,IAAIC,UAAU,uDAGfC,aAAeJ,EAAOI,cAAgB,IAAIN,IAE1C,SAACO,EAAWC,OACbC,EAAQP,EAAOI,aAAaI,IAAIH,QAC/BE,MACIH,aAAaK,QA5B1B,SAASC,EAAYN,EAAcG,EAAOI,MACpCP,EAAaQ,IAAIL,EAAMM,YACnB,IAAIC,gBAAgBP,EAAMM,4BAG9BN,EAAMM,QACKE,IAAIR,EAAMM,KAAMN,GAG3BI,MACG,IAAIK,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,GAAK,EAAG,KACnCE,EAAaP,EAAOK,KACfG,OAASZ,IACRH,EAAcc,EAAYA,EAAWE,YAgBrCpB,EAAOI,aAAcJ,EAAOqB,KAAMrB,EAAOqB,KAAKD,YAElDpB,EAAOI,aAAaI,IAAIH,WAExB,IAAIS,gBAAgBT,qBAI1BiB,EAASzB,EAAMW,IAAID,EAAMgB,cACxBD,EAAQ,SACPC,EAAW,GACXC,EAAKjB,EACFiB,GAAI,KACHC,EAAOC,MAAMC,QAAQH,EAAGC,MAAQD,EAAGC,KAAK,GAAKD,EAAGC,KAClDA,MACSA,EAAOF,KAEfC,EAAGL,eAEJS,EAAShC,EAAaiC,MAAMN,GAC5BO,EAASlC,EAAamC,iBAAiBH,GACvCI,EAAOC,OAAOC,OAAO,MAClBlB,EAAI,EAAGA,EAAIY,EAAOX,OAAQD,GAAK,EACb,iBAAdY,EAAOZ,OACXY,EAAOZ,GAAGH,OAAQ,MAGhBiB,SAAQE,UACbjB,IAAIQ,EAAUD,KACdC,SAAWA,MAGfY,EAAMnC,EAAOoC,QAAUd,EAAOQ,OAAOxB,EAAQL,IAAY,OAEzDA,EAAQoC,sBAAwB/B,EAAQ,SACpCgC,KACAN,EAAOC,OAAOD,KAAK1B,GAChBU,EAAI,EAAGA,EAAIgB,EAAKf,OAAQD,GAAK,EAAG,KACjCuB,EAAMP,EAAKhB,GACZM,EAAOU,KAAKO,OACHA,GAAOjC,EAAOiC,QAGxBC,EAAQvC,EAAQoC,qBAAqBC,GACvCE,OACyB,MAApBA,EAAMC,OAAO,GAAaD,MAAYA,UAI1CL,UAIXjC,EAAgBH,aAAeA"}